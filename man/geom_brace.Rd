% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/geom_brace.R
\name{geom_brace}
\alias{geom_brace}
\title{create a curly brace as a layer ready to be added to a ggplot object}
\usage{
geom_brace(
  mapping = NULL,
  data = NULL,
  inherit.aes = TRUE,
  inherit.data = TRUE,
  rotate = 0,
  mid = NULL,
  bending = NULL,
  npoints = 100,
  labelsize = 0,
  labeldistance = NULL,
  labelrotate = 0,
  textORlabel = "text",
  ...
)
}
\arguments{
\item{mapping}{Set of aesthetic mappings created by \code{\link[ggplot2:aes]{aes()}} or
\code{\link[ggplot2:aes_]{aes_()}}. If specified and \code{inherit.aes = TRUE} (the
default), it is combined with the default mapping at the top level of the
plot. You must supply \code{mapping} if there is no plot mapping.}

\item{data}{The data to be displayed in this layer. There are three
options:

If \code{NULL}, the default, the data is inherited from the plot
data as specified in the call to \code{\link[ggplot2:ggplot]{ggplot()}}.

A \code{data.frame}, or other object, will override the plot
data. All objects will be fortified to produce a data frame. See
\code{\link[ggplot2:fortify]{fortify()}} for which variables will be created.

A \code{function} will be called with a single argument,
the plot data. The return value must be a \code{data.frame}, and
will be used as the layer data. A \code{function} can be created
from a \code{formula} (e.g. \code{~ head(.x, 10)}).}

\item{inherit.aes}{If \code{FALSE}, overrides the default aesthetics,
rather than combining with them. This is most useful for helper functions
that define both data and aesthetics and shouldn't inherit behaviour from
the default plot specification, e.g. \code{\link[ggplot2:borders]{borders()}}.}

\item{inherit.data}{boolean, should data (and aes) from the ggplot main function be inherited? Set to FALSE if you set your own x and y.}

\item{rotate}{number, defines where the brace is pointing to: 0=up, 90=right, 180=down, 270=left. When specified by user, will overwrite other directions the brace might have from x/y coordinates.}

\item{mid}{number, where the pointer is within the bracket space (between 0.25 and 0.75)}

\item{bending}{number, how strongly the curves of the braces should be bent (the higher the more round). Note: too high values will result in the brace showing zick-zack lines}

\item{npoints}{integer, number of points generated for the brace curves (resolution). This number will be rounded to be a multiple of 4 for calculation purposes.}

\item{labelsize}{number, changing the font size of the label. Only takes effect if the parameter "label" was defined.}

\item{labeldistance}{number, distance of the label to the brace pointer}

\item{textORlabel}{string, either "text" or "label" to define whether geom_text or geom_label should be used}

\item{...}{Other arguments passed on to \code{\link[ggplot2:layer]{layer()}}. These are
often aesthetics, used to set an aesthetic to a fixed value, like
\code{colour = "red"} or \code{size = 3}. They may also be parameters
to the paired geom/stat.}
}
\value{
ggplot2 layer object (geom_path) that can directly be added to a ggplot2 object. If a label was provided, another layer is added.
}
\description{
Imports:
ggplot2
}
\examples{
library(ggbrace)
library(ggplot2)
ggplot() + geom_brace()

ggplot() + geom_brace(aes(x=c(1,2), y=c(1,2)), inherit.data=FALSE)

}
